// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ReactJs.Net.web.Data;
using ReactJs.Net.web.Models.Tasks;
using System;

namespace ReactJs.Net.web.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20180328215352_adding-navigational-properties")]
    partial class addingnavigationalproperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReactJs.Net.web.Models.Tasks.TaskEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid?>("AssignedTo");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("DueOn");

                    b.Property<string>("LastModifiedBy");

                    b.Property<DateTime>("LastModifiedOn");

                    b.Property<string>("Name");

                    b.Property<int>("TaskStatus");

                    b.HasKey("Id");

                    b.ToTable("TaskEntity");
                });

            modelBuilder.Entity("ReactJs.Net.web.Models.Tasks.TaskUserEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastModifiedBy");

                    b.Property<DateTime>("LastModifiedOn");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("TaskUserEntity");
                });

            modelBuilder.Entity("ReactJs.Net.web.Models.Tasks.UserTaskEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("LastModifiedBy");

                    b.Property<DateTime>("LastModifiedOn");

                    b.Property<Guid?>("TaskId");

                    b.Property<Guid?>("TaskUserId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("TaskUserId");

                    b.ToTable("UserTaskEntity");
                });

            modelBuilder.Entity("ReactJs.Net.web.Models.Tasks.UserTaskEntity", b =>
                {
                    b.HasOne("ReactJs.Net.web.Models.Tasks.TaskEntity", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.HasOne("ReactJs.Net.web.Models.Tasks.TaskUserEntity", "TaskUser")
                        .WithMany("UserTasks")
                        .HasForeignKey("TaskUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
